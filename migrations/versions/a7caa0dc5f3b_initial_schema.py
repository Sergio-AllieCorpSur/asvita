"""initial schema

Revision ID: a7caa0dc5f3b
Revises: 
Create Date: 2025-09-07 18:06:46.679507

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a7caa0dc5f3b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dataroom',
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('dataroom', schema=None) as batch_op:
        batch_op.create_index('ix_dataroom_name', ['name'], unique=False, postgresql_using='btree')

    op.create_table('user',
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('full_name', sa.String(length=200), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index('ix_user_email', ['email'], unique=False)

    op.create_table('auditlog',
    sa.Column('actor_id', sa.UUID(), nullable=True),
    sa.Column('dataroom_id', sa.UUID(), nullable=False),
    sa.Column('resource_type', sa.String(length=50), nullable=False),
    sa.Column('resource_id', sa.String(length=64), nullable=False),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('details', sa.String(length=1024), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['actor_id'], ['user.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['dataroom_id'], ['dataroom.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('auditlog', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_auditlog_actor_id'), ['actor_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_auditlog_dataroom_id'), ['dataroom_id'], unique=False)

    op.create_table('folder',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('dataroom_id', sa.UUID(), nullable=False),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.Column('path', sa.String(length=2048), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('id IS NULL OR id <> parent_id', name='ck_folder_not_self_parent'),
    sa.ForeignKeyConstraint(['dataroom_id'], ['dataroom.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['parent_id'], ['folder.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('dataroom_id', 'parent_id', 'name', name='uq_folder_sibling_name')
    )
    with op.batch_alter_table('folder', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_folder_dataroom_id'), ['dataroom_id'], unique=False)
        batch_op.create_index('ix_folder_dataroom_parent', ['dataroom_id', 'parent_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_folder_parent_id'), ['parent_id'], unique=False)
        batch_op.create_index('ix_folder_path', ['path'], unique=False, postgresql_using='btree')

    op.create_table('membership',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('dataroom_id', sa.UUID(), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['dataroom_id'], ['dataroom.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'dataroom_id', name='uq_membership_user_dataroom')
    )
    with op.batch_alter_table('membership', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_membership_dataroom_id'), ['dataroom_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_membership_user_id'), ['user_id'], unique=False)

    op.create_table('file',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=False),
    sa.Column('content_type', sa.String(length=100), nullable=False),
    sa.Column('size_bytes', sa.Integer(), nullable=False),
    sa.Column('storage_path', sa.String(length=2048), nullable=False),
    sa.Column('checksum_sha256', sa.String(length=64), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('folder_id', sa.UUID(), nullable=False),
    sa.Column('dataroom_id', sa.UUID(), nullable=False),
    sa.Column('uploaded_by_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['dataroom_id'], ['dataroom.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['folder_id'], ['folder.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['uploaded_by_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('folder_id', 'name', name='uq_file_name_per_folder')
    )
    with op.batch_alter_table('file', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_file_checksum_sha256'), ['checksum_sha256'], unique=False)
        batch_op.create_index('ix_file_dataroom_folder', ['dataroom_id', 'folder_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_file_dataroom_id'), ['dataroom_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_file_folder_id'), ['folder_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_file_uploaded_by_id'), ['uploaded_by_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('file', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_file_uploaded_by_id'))
        batch_op.drop_index(batch_op.f('ix_file_folder_id'))
        batch_op.drop_index(batch_op.f('ix_file_dataroom_id'))
        batch_op.drop_index('ix_file_dataroom_folder')
        batch_op.drop_index(batch_op.f('ix_file_checksum_sha256'))

    op.drop_table('file')
    with op.batch_alter_table('membership', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_membership_user_id'))
        batch_op.drop_index(batch_op.f('ix_membership_dataroom_id'))

    op.drop_table('membership')
    with op.batch_alter_table('folder', schema=None) as batch_op:
        batch_op.drop_index('ix_folder_path', postgresql_using='btree')
        batch_op.drop_index(batch_op.f('ix_folder_parent_id'))
        batch_op.drop_index('ix_folder_dataroom_parent')
        batch_op.drop_index(batch_op.f('ix_folder_dataroom_id'))

    op.drop_table('folder')
    with op.batch_alter_table('auditlog', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_auditlog_dataroom_id'))
        batch_op.drop_index(batch_op.f('ix_auditlog_actor_id'))

    op.drop_table('auditlog')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index('ix_user_email')

    op.drop_table('user')
    with op.batch_alter_table('dataroom', schema=None) as batch_op:
        batch_op.drop_index('ix_dataroom_name', postgresql_using='btree')

    op.drop_table('dataroom')
    # ### end Alembic commands ###
